#!/usr/bin/env  python

import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
from slurm2tcs import util


def run_pjacl():

    cmd = ['pjacl', '--data']
    returncode, stdout,  stderr = util.call(cmd)
    lines = stdout.split('\n')

    rscgrp = None
    for line in lines:
        line = line.split(',')

        if len(line) == 0:
            pass
        elif line[1] == 'default rscgroup':
            rscgrp = line[2]
            break

    timelimit = 'infinite'

    return rscgrp, timelimit


def run_pjshowrsc(rscgrp):

    cmd = ['pjshowrsc', '--data', '--rscgrp', rscgrp]
    returncode, stdout, stderr = util.call(cmd)
    if returncode != 0:
        return '0'

    lines = stdout.split('\n')

    for line in lines:
        line = line.split(',')

        if len(line) <= 1:
            continue
        elif line[0] == '' and line[1] == rscgrp:
            nodes = line[2]
            break

    return nodes


def run_pjstat(rscgrp):

    cmd = ['pjstat', '--rsc', '--rscgrp', rscgrp]
    returncode, stdout,  stderr = util.call(cmd)

    lines = stdout.split('\n')

    avail = 'unknown'
    for line in lines[2:-1]:
        line = line.split()
        if '[ENABLE,START]' in line[2]:
            avail = 'up'
            break

    state = 'any'
        
    return avail, state
    

def run():

    cmd = ['pjstat', '--rsc']
    returncode, stdout,  stderr = call(cmd)
    resources = stdout.split('\n')
    for resource in resources[2:-1]:
        resource = resource.split()
        rscgrp = resource[2]

        partition, avail = None, None
        i = rscgrp.find('[')
        partition = rscgrp[0:i]

        
        
        if '[ENABLE,START]' in rscgrp:
            avail = 'up'
        else:
            avail = 'unknown'

        timelimit = 'infinite'

        # 'pjshowrsc --rscgrp  small --data'
        nodes = None

        state = 'any'

        nodelist = None
        

        print("{}\t{}\t{}\t{}\t{}\t{}".format(partition, avail, timelimit, nodes, state, nodelist))


def main():

    rscgrp, timelimit = run_pjacl()
    nodes = run_pjshowrsc(rscgrp)
    avail, state = run_pjstat(rscgrp)
    nodelist = '-'
    
    header = "PARTITION\tAVAIL\tTIMELIMIT\tNODES\tSTATE\tNODELIST\n"
    content = "{0}*\t{1}\t{2}\t{3}\t{4}\t{5}\n".format(rscgrp,
                                                       avail,
                                                       timelimit,
                                                       nodes,
                                                       state,
                                                       nodelist)
    sys.stdout.write(header)
    sys.stdout.write(content)

    
if __name__ == '__main__':
    main()
    
